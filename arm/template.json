{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "df-2024-ch"
        },
        "synapse_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'synapse'"
        },
        "linkedService1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'linkedService1'"
        },
        "linkedService2_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'linkedService2'"
        },
        "synapse_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "synapse6335.sql.azuresynapse.net"
        },
        "synapse_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "dwh"
        },
        "synapse_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "sqladminuser"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_ch7')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2024-07-21T19:35:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger_ust')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "taxi_copy",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "2024-07-21T19:55:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/taxi_copy')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_ust')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "synapse",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "nyctlc"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/synapse')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_ust')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "nyc_taxi",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "green",
                        "container": "nyctlc"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "vendorID",
                        "type": "UTF8"
                    },
                    {
                        "name": "tpepPickupDateTime",
                        "type": "INT96"
                    },
                    {
                        "name": "tpepDropoffDateTime",
                        "type": "INT96"
                    },
                    {
                        "name": "passengerCount",
                        "type": "INT32"
                    },
                    {
                        "name": "tripDistance",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "puLocationId",
                        "type": "UTF8"
                    },
                    {
                        "name": "doLocationId",
                        "type": "UTF8"
                    },
                    {
                        "name": "startLon",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "startLat",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "endLon",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "endLat",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "rateCodeId",
                        "type": "INT32"
                    },
                    {
                        "name": "storeAndFwdFlag",
                        "type": "UTF8"
                    },
                    {
                        "name": "paymentType",
                        "type": "UTF8"
                    },
                    {
                        "name": "fareAmount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "extra",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "mtaTax",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "improvementSurcharge",
                        "type": "UTF8"
                    },
                    {
                        "name": "tipAmount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "tollsAmount",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "totalAmount",
                        "type": "DOUBLE"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/nyc_taxi')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/taxi_copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy_ust",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "nyctlc//"
                            },
                            {
                                "name": "Destination",
                                "value": "dbo.nyctlc"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": "green",
                                    "wildcardFileName": "*.parquet",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "ParquetReadSettings"
                                }
                            },
                            "sink": {
                                "type": "SqlDWSink",
                                "writeBehavior": "Insert",
                                "tableOption": "autoCreate"
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true,
                            "validateDataConsistency": false,
                            "logSettings": {
                                "enableCopyActivityLog": true,
                                "copyActivityLogSettings": {
                                    "logLevel": "Info",
                                    "enableReliableLogging": false
                                },
                                "logLocationSettings": {
                                    "linkedServiceName": {
                                        "referenceName": "linkedService2",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            },
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "vendorID",
                                            "type": "Int32",
                                            "physicalType": "INT32"
                                        },
                                        "sink": {
                                            "name": "vendorID",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "lpepPickupDatetime",
                                            "type": "DateTime",
                                            "physicalType": "INT96"
                                        },
                                        "sink": {
                                            "name": "lpepPickupDatetime",
                                            "type": "DateTime",
                                            "physicalType": "datetime2"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "lpepDropoffDatetime",
                                            "type": "DateTime",
                                            "physicalType": "INT96"
                                        },
                                        "sink": {
                                            "name": "lpepDropoffDatetime",
                                            "type": "DateTime",
                                            "physicalType": "datetime2"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "passengerCount",
                                            "type": "Int32",
                                            "physicalType": "INT32"
                                        },
                                        "sink": {
                                            "name": "passengerCount",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "tripDistance",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "tripDistance",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "puLocationId",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "puLocationId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "doLocationId",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "doLocationId",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pickupLongitude",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "pickupLongitude",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "pickupLatitude",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "pickupLatitude",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "dropoffLongitude",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "dropoffLongitude",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "dropoffLatitude",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "dropoffLatitude",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "rateCodeID",
                                            "type": "Int32",
                                            "physicalType": "INT32"
                                        },
                                        "sink": {
                                            "name": "rateCodeID",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "storeAndFwdFlag",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "storeAndFwdFlag",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "paymentType",
                                            "type": "Int32",
                                            "physicalType": "INT32"
                                        },
                                        "sink": {
                                            "name": "paymentType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "fareAmount",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "fareAmount",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "extra",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "extra",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "mtaTax",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "mtaTax",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "improvementSurcharge",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "improvementSurcharge",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "tipAmount",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "tipAmount",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "tollsAmount",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "tollsAmount",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ehailFee",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "ehailFee",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "totalAmount",
                                            "type": "Double",
                                            "physicalType": "DOUBLE"
                                        },
                                        "sink": {
                                            "name": "totalAmount",
                                            "type": "Double",
                                            "physicalType": "float"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "tripType",
                                            "type": "Int32",
                                            "physicalType": "INT32"
                                        },
                                        "sink": {
                                            "name": "tripType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_ust",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_ust",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-07-21T19:58:12Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_ust')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_ust')]",
                "[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/credential1')]",
            "type": "Microsoft.DataFactory/factories/credentials",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "ManagedIdentity",
                "typeProperties": {
                    "resourceId": "/subscriptions/796313f9-881f-4bee-bd46-ba6ad10afbb4/resourcegroups/rg-2024-ch/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uai-all"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/credential2')]",
            "type": "Microsoft.DataFactory/factories/credentials",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "ManagedIdentity",
                "typeProperties": {
                    "resourceId": "/subscriptions/796313f9-881f-4bee-bd46-ba6ad10afbb4/resourcegroups/rg-2024-ch/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uai-datafactory"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/nyc_taxi')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "containerUri": "https://azureopendatastorage.blob.core.windows.net/nyctlc/",
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/synapse')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDW",
                "typeProperties": {
                    "server": "[parameters('synapse_properties_typeProperties_server')]",
                    "database": "[parameters('synapse_properties_typeProperties_database')]",
                    "encrypt": "mandatory",
                    "trustServerCertificate": true,
                    "authenticationType": "SQL",
                    "userName": "[parameters('synapse_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('synapse_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/linkedService1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('linkedService1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/linkedService2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('linkedService2_connectionString')]"
                }
            },
            "dependsOn": []
        }
    ]
}